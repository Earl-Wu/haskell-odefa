-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from src/Parser/Parser.y
-----------------------------------------------------------------------------


terminal ";;" is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseExpr -> Expr                           (0)
	Expr -> Exprs                                      (1)
	Exprs -> Exprs ";" Clause                          (2)
	Exprs -> Exprs ";"                                 (3)
	Exprs -> Clause                                    (4)
	Clause -> Variable "=" ClauseBody                  (5)
	Variable -> Identifier                             (6)
	Identifier -> ident                                (7)
	ClauseBody -> Value                                (8)
	ClauseBody -> Variable                             (9)
	ClauseBody -> Variable Variable CallSiteAnnots     (10)
	ClauseBody -> Variable "~" Pattern "?" FunctionValue ":" FunctionValue   (11)
	ClauseBody -> Variable "." ident                   (12)
	ClauseBody -> Variable "+" Variable                (13)
	ClauseBody -> Variable "-" Variable                (14)
	ClauseBody -> Variable "<" Variable                (15)
	ClauseBody -> Variable "<=" Variable               (16)
	ClauseBody -> Variable "==" Variable               (17)
	ClauseBody -> Variable "and" Variable              (18)
	ClauseBody -> Variable "or" Variable               (19)
	ClauseBody -> "not" Variable                       (20)
	CallSiteAnnots ->                                  (21)
	CallSiteAnnots -> CallSiteAnnot CallSiteAnnots     (22)
	CallSiteAnnot -> "@@acontextual"                   (23)
	CallSiteAnnot -> "@@acontextual" "(" ident ")"     (24)
	Value -> RecordValue                               (25)
	Value -> FunctionValue                             (26)
	Value -> IntValue                                  (27)
	Value -> BoolValue                                 (28)
	RecordValue -> "{" "}"                             (29)
	RecordValue -> "{" RecordEntries "}"               (30)
	RecordEntry -> Identifier "=" Variable             (31)
	RecPat -> Identifier "=" Pattern                   (32)
	RecordEntries -> RecordEntries "," RecordEntry     (33)
	RecordEntries -> RecordEntries ","                 (34)
	RecordEntries -> RecordEntry                       (35)
	RecPats -> RecPats "," RecPat                      (36)
	RecPats -> RecPats ","                             (37)
	RecPats -> RecPat                                  (38)
	FunctionValue -> "fun" Variable "->" "(" Expr ")"   (39)
	IntValue -> int                                    (40)
	BoolValue -> "true"                                (41)
	BoolValue -> "false"                               (42)
	Pattern -> RecordPattern                           (43)
	Pattern -> "fun"                                   (44)
	Pattern -> "int"                                   (45)
	Pattern -> BoolPattern                             (46)
	Pattern -> "any"                                   (47)
	Pattern -> "_"                                     (48)
	RecordPattern -> "{" "}"                           (49)
	RecordPattern -> "{" RecPats "}"                   (50)
	BoolPattern -> "true"                              (51)
	BoolPattern -> "false"                             (52)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"{"            { T.OpenBrace }
	"}"            { T.CloseBrace }
	"("            { T.OpenParent }
	")"            { T.CloseParent }
	";"            { T.Semicolon }
	","            { T.Comma }
	"="            { T.Equals }
	"->"           { T.Arrow }
	"?"            { T.QuestionMark }
	"~"            { T.Tilde }
	":"            { T.Colon }
	"."            { T.Dot }
	"@@acontextual"{ T.AnnotationAcontextual }
	"fun"          { T.KeywordFun }
	"int"          { T.KeywordInt }
	"true"         { T.KeywordTrue }
	"false"        { T.KeywordFalse }
	"and"          { T.KeywordAnd }
	"or"           { T.KeywordOr }
	"not"          { T.KeywordNot }
	"any"          { T.KeywordAny }
	"_"            { T.Underscore }
	"+"            { T.BinOpPlus }
	"-"            { T.BinOpMinus }
	"<"            { T.BinOpLess }
	"<="           { T.BinOpLessEqual }
	"=="           { T.BinOpEqual }
	int            { T.Integer $$ }
	ident          { T.Ident $$ }
	";;"           { T.DoubleSemicolon }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseExpr rule  0
	Expr            rule  1
	Exprs           rules 2, 3, 4
	Clause          rule  5
	Variable        rule  6
	Identifier      rule  7
	ClauseBody      rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
	CallSiteAnnots  rules 21, 22
	CallSiteAnnot   rules 23, 24
	Value           rules 25, 26, 27, 28
	RecordValue     rules 29, 30
	RecordEntry     rule  31
	RecPat          rule  32
	RecordEntries   rules 33, 34, 35
	RecPats         rules 36, 37, 38
	FunctionValue   rule  39
	IntValue        rule  40
	BoolValue       rules 41, 42
	Pattern         rules 43, 44, 45, 46, 47, 48
	RecordPattern   rules 49, 50
	BoolPattern     rules 51, 52

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	ident          shift, and enter state 6

	Expr           goto state 7
	Exprs          goto state 2
	Clause         goto state 3
	Variable       goto state 4
	Identifier     goto state 5

State 1


	ident          shift, and enter state 6

	Exprs          goto state 2
	Clause         goto state 3
	Variable       goto state 4
	Identifier     goto state 5

State 2

	Expr -> Exprs .                                     (rule 1)
	Exprs -> Exprs . ";" Clause                         (rule 2)
	Exprs -> Exprs . ";"                                (rule 3)

	")"            reduce using rule 1
	";"            shift, and enter state 9
	%eof           reduce using rule 1


State 3

	Exprs -> Clause .                                   (rule 4)

	")"            reduce using rule 4
	";"            reduce using rule 4
	%eof           reduce using rule 4


State 4

	Clause -> Variable . "=" ClauseBody                 (rule 5)

	"="            shift, and enter state 8


State 5

	Variable -> Identifier .                            (rule 6)

	"}"            reduce using rule 6
	")"            reduce using rule 6
	";"            reduce using rule 6
	","            reduce using rule 6
	"="            reduce using rule 6
	"->"           reduce using rule 6
	"~"            reduce using rule 6
	"."            reduce using rule 6
	"@@acontextual"reduce using rule 6
	"and"          reduce using rule 6
	"or"           reduce using rule 6
	"+"            reduce using rule 6
	"-"            reduce using rule 6
	"<"            reduce using rule 6
	"<="           reduce using rule 6
	"=="           reduce using rule 6
	ident          reduce using rule 6
	%eof           reduce using rule 6


State 6

	Identifier -> ident .                               (rule 7)

	"}"            reduce using rule 7
	")"            reduce using rule 7
	";"            reduce using rule 7
	","            reduce using rule 7
	"="            reduce using rule 7
	"->"           reduce using rule 7
	"~"            reduce using rule 7
	"."            reduce using rule 7
	"@@acontextual"reduce using rule 7
	"and"          reduce using rule 7
	"or"           reduce using rule 7
	"+"            reduce using rule 7
	"-"            reduce using rule 7
	"<"            reduce using rule 7
	"<="           reduce using rule 7
	"=="           reduce using rule 7
	ident          reduce using rule 7
	%eof           reduce using rule 7


State 7

	%start_parseExpr -> Expr .                          (rule 0)

	%eof           accept


State 8

	Clause -> Variable "=" . ClauseBody                 (rule 5)

	"{"            shift, and enter state 18
	"fun"          shift, and enter state 19
	"true"         shift, and enter state 20
	"false"        shift, and enter state 21
	"not"          shift, and enter state 22
	int            shift, and enter state 23
	ident          shift, and enter state 6

	Variable       goto state 11
	Identifier     goto state 5
	ClauseBody     goto state 12
	Value          goto state 13
	RecordValue    goto state 14
	FunctionValue  goto state 15
	IntValue       goto state 16
	BoolValue      goto state 17

State 9

	Exprs -> Exprs ";" . Clause                         (rule 2)
	Exprs -> Exprs ";" .                                (rule 3)

	")"            reduce using rule 3
	";"            reduce using rule 3
	ident          shift, and enter state 6
	%eof           reduce using rule 3

	Clause         goto state 10
	Variable       goto state 4
	Identifier     goto state 5

State 10

	Exprs -> Exprs ";" Clause .                         (rule 2)

	")"            reduce using rule 2
	";"            reduce using rule 2
	%eof           reduce using rule 2


State 11

	ClauseBody -> Variable .                            (rule 9)
	ClauseBody -> Variable . Variable CallSiteAnnots    (rule 10)
	ClauseBody -> Variable . "~" Pattern "?" FunctionValue ":" FunctionValue    (rule 11)
	ClauseBody -> Variable . "." ident                  (rule 12)
	ClauseBody -> Variable . "+" Variable               (rule 13)
	ClauseBody -> Variable . "-" Variable               (rule 14)
	ClauseBody -> Variable . "<" Variable               (rule 15)
	ClauseBody -> Variable . "<=" Variable              (rule 16)
	ClauseBody -> Variable . "==" Variable              (rule 17)
	ClauseBody -> Variable . "and" Variable             (rule 18)
	ClauseBody -> Variable . "or" Variable              (rule 19)

	")"            reduce using rule 9
	";"            reduce using rule 9
	"~"            shift, and enter state 31
	"."            shift, and enter state 32
	"and"          shift, and enter state 33
	"or"           shift, and enter state 34
	"+"            shift, and enter state 35
	"-"            shift, and enter state 36
	"<"            shift, and enter state 37
	"<="           shift, and enter state 38
	"=="           shift, and enter state 39
	ident          shift, and enter state 6
	%eof           reduce using rule 9

	Variable       goto state 30
	Identifier     goto state 5

State 12

	Clause -> Variable "=" ClauseBody .                 (rule 5)

	")"            reduce using rule 5
	";"            reduce using rule 5
	%eof           reduce using rule 5


State 13

	ClauseBody -> Value .                               (rule 8)

	")"            reduce using rule 8
	";"            reduce using rule 8
	%eof           reduce using rule 8


State 14

	Value -> RecordValue .                              (rule 25)

	")"            reduce using rule 25
	";"            reduce using rule 25
	%eof           reduce using rule 25


State 15

	Value -> FunctionValue .                            (rule 26)

	")"            reduce using rule 26
	";"            reduce using rule 26
	%eof           reduce using rule 26


State 16

	Value -> IntValue .                                 (rule 27)

	")"            reduce using rule 27
	";"            reduce using rule 27
	%eof           reduce using rule 27


State 17

	Value -> BoolValue .                                (rule 28)

	")"            reduce using rule 28
	";"            reduce using rule 28
	%eof           reduce using rule 28


State 18

	RecordValue -> "{" . "}"                            (rule 29)
	RecordValue -> "{" . RecordEntries "}"              (rule 30)

	"}"            shift, and enter state 29
	ident          shift, and enter state 6

	Identifier     goto state 26
	RecordEntry    goto state 27
	RecordEntries  goto state 28

State 19

	FunctionValue -> "fun" . Variable "->" "(" Expr ")"    (rule 39)

	ident          shift, and enter state 6

	Variable       goto state 25
	Identifier     goto state 5

State 20

	BoolValue -> "true" .                               (rule 41)

	")"            reduce using rule 41
	";"            reduce using rule 41
	%eof           reduce using rule 41


State 21

	BoolValue -> "false" .                              (rule 42)

	")"            reduce using rule 42
	";"            reduce using rule 42
	%eof           reduce using rule 42


State 22

	ClauseBody -> "not" . Variable                      (rule 20)

	ident          shift, and enter state 6

	Variable       goto state 24
	Identifier     goto state 5

State 23

	IntValue -> int .                                   (rule 40)

	")"            reduce using rule 40
	";"            reduce using rule 40
	%eof           reduce using rule 40


State 24

	ClauseBody -> "not" Variable .                      (rule 20)

	")"            reduce using rule 20
	";"            reduce using rule 20
	%eof           reduce using rule 20


State 25

	FunctionValue -> "fun" Variable . "->" "(" Expr ")"    (rule 39)

	"->"           shift, and enter state 64


State 26

	RecordEntry -> Identifier . "=" Variable            (rule 31)

	"="            shift, and enter state 63


State 27

	RecordEntries -> RecordEntry .                      (rule 35)

	"}"            reduce using rule 35
	","            reduce using rule 35


State 28

	RecordValue -> "{" RecordEntries . "}"              (rule 30)
	RecordEntries -> RecordEntries . "," RecordEntry    (rule 33)
	RecordEntries -> RecordEntries . ","                (rule 34)

	"}"            shift, and enter state 61
	","            shift, and enter state 62


State 29

	RecordValue -> "{" "}" .                            (rule 29)

	")"            reduce using rule 29
	";"            reduce using rule 29
	%eof           reduce using rule 29


State 30

	ClauseBody -> Variable Variable . CallSiteAnnots    (rule 10)

	")"            reduce using rule 21
	";"            reduce using rule 21
	"@@acontextual"shift, and enter state 60
	%eof           reduce using rule 21

	CallSiteAnnots goto state 58
	CallSiteAnnot  goto state 59

State 31

	ClauseBody -> Variable "~" . Pattern "?" FunctionValue ":" FunctionValue    (rule 11)

	"{"            shift, and enter state 51
	"fun"          shift, and enter state 52
	"int"          shift, and enter state 53
	"true"         shift, and enter state 54
	"false"        shift, and enter state 55
	"any"          shift, and enter state 56
	"_"            shift, and enter state 57

	Pattern        goto state 48
	RecordPattern  goto state 49
	BoolPattern    goto state 50

State 32

	ClauseBody -> Variable "." . ident                  (rule 12)

	ident          shift, and enter state 47


State 33

	ClauseBody -> Variable "and" . Variable             (rule 18)

	ident          shift, and enter state 6

	Variable       goto state 46
	Identifier     goto state 5

State 34

	ClauseBody -> Variable "or" . Variable              (rule 19)

	ident          shift, and enter state 6

	Variable       goto state 45
	Identifier     goto state 5

State 35

	ClauseBody -> Variable "+" . Variable               (rule 13)

	ident          shift, and enter state 6

	Variable       goto state 44
	Identifier     goto state 5

State 36

	ClauseBody -> Variable "-" . Variable               (rule 14)

	ident          shift, and enter state 6

	Variable       goto state 43
	Identifier     goto state 5

State 37

	ClauseBody -> Variable "<" . Variable               (rule 15)

	ident          shift, and enter state 6

	Variable       goto state 42
	Identifier     goto state 5

State 38

	ClauseBody -> Variable "<=" . Variable              (rule 16)

	ident          shift, and enter state 6

	Variable       goto state 41
	Identifier     goto state 5

State 39

	ClauseBody -> Variable "==" . Variable              (rule 17)

	ident          shift, and enter state 6

	Variable       goto state 40
	Identifier     goto state 5

State 40

	ClauseBody -> Variable "==" Variable .              (rule 17)

	")"            reduce using rule 17
	";"            reduce using rule 17
	%eof           reduce using rule 17


State 41

	ClauseBody -> Variable "<=" Variable .              (rule 16)

	")"            reduce using rule 16
	";"            reduce using rule 16
	%eof           reduce using rule 16


State 42

	ClauseBody -> Variable "<" Variable .               (rule 15)

	")"            reduce using rule 15
	";"            reduce using rule 15
	%eof           reduce using rule 15


State 43

	ClauseBody -> Variable "-" Variable .               (rule 14)

	")"            reduce using rule 14
	";"            reduce using rule 14
	%eof           reduce using rule 14


State 44

	ClauseBody -> Variable "+" Variable .               (rule 13)

	")"            reduce using rule 13
	";"            reduce using rule 13
	%eof           reduce using rule 13


State 45

	ClauseBody -> Variable "or" Variable .              (rule 19)

	")"            reduce using rule 19
	";"            reduce using rule 19
	%eof           reduce using rule 19


State 46

	ClauseBody -> Variable "and" Variable .             (rule 18)

	")"            reduce using rule 18
	";"            reduce using rule 18
	%eof           reduce using rule 18


State 47

	ClauseBody -> Variable "." ident .                  (rule 12)

	")"            reduce using rule 12
	";"            reduce using rule 12
	%eof           reduce using rule 12


State 48

	ClauseBody -> Variable "~" Pattern . "?" FunctionValue ":" FunctionValue    (rule 11)

	"?"            shift, and enter state 74


State 49

	Pattern -> RecordPattern .                          (rule 43)

	"}"            reduce using rule 43
	","            reduce using rule 43
	"?"            reduce using rule 43


State 50

	Pattern -> BoolPattern .                            (rule 46)

	"}"            reduce using rule 46
	","            reduce using rule 46
	"?"            reduce using rule 46


State 51

	RecordPattern -> "{" . "}"                          (rule 49)
	RecordPattern -> "{" . RecPats "}"                  (rule 50)

	"}"            shift, and enter state 73
	ident          shift, and enter state 6

	Identifier     goto state 70
	RecPat         goto state 71
	RecPats        goto state 72

State 52

	Pattern -> "fun" .                                  (rule 44)

	"}"            reduce using rule 44
	","            reduce using rule 44
	"?"            reduce using rule 44


State 53

	Pattern -> "int" .                                  (rule 45)

	"}"            reduce using rule 45
	","            reduce using rule 45
	"?"            reduce using rule 45


State 54

	BoolPattern -> "true" .                             (rule 51)

	"}"            reduce using rule 51
	","            reduce using rule 51
	"?"            reduce using rule 51


State 55

	BoolPattern -> "false" .                            (rule 52)

	"}"            reduce using rule 52
	","            reduce using rule 52
	"?"            reduce using rule 52


State 56

	Pattern -> "any" .                                  (rule 47)

	"}"            reduce using rule 47
	","            reduce using rule 47
	"?"            reduce using rule 47


State 57

	Pattern -> "_" .                                    (rule 48)

	"}"            reduce using rule 48
	","            reduce using rule 48
	"?"            reduce using rule 48


State 58

	ClauseBody -> Variable Variable CallSiteAnnots .    (rule 10)

	")"            reduce using rule 10
	";"            reduce using rule 10
	%eof           reduce using rule 10


State 59

	CallSiteAnnots -> CallSiteAnnot . CallSiteAnnots    (rule 22)

	")"            reduce using rule 21
	";"            reduce using rule 21
	"@@acontextual"shift, and enter state 60
	%eof           reduce using rule 21

	CallSiteAnnots goto state 69
	CallSiteAnnot  goto state 59

State 60

	CallSiteAnnot -> "@@acontextual" .                  (rule 23)
	CallSiteAnnot -> "@@acontextual" . "(" ident ")"    (rule 24)

	"("            shift, and enter state 68
	")"            reduce using rule 23
	";"            reduce using rule 23
	"@@acontextual"reduce using rule 23
	%eof           reduce using rule 23


State 61

	RecordValue -> "{" RecordEntries "}" .              (rule 30)

	")"            reduce using rule 30
	";"            reduce using rule 30
	%eof           reduce using rule 30


State 62

	RecordEntries -> RecordEntries "," . RecordEntry    (rule 33)
	RecordEntries -> RecordEntries "," .                (rule 34)

	"}"            reduce using rule 34
	","            reduce using rule 34
	ident          shift, and enter state 6

	Identifier     goto state 26
	RecordEntry    goto state 67

State 63

	RecordEntry -> Identifier "=" . Variable            (rule 31)

	ident          shift, and enter state 6

	Variable       goto state 66
	Identifier     goto state 5

State 64

	FunctionValue -> "fun" Variable "->" . "(" Expr ")"    (rule 39)

	"("            shift, and enter state 65


State 65

	FunctionValue -> "fun" Variable "->" "(" . Expr ")"    (rule 39)

	ident          shift, and enter state 6

	Expr           goto state 80
	Exprs          goto state 2
	Clause         goto state 3
	Variable       goto state 4
	Identifier     goto state 5

State 66

	RecordEntry -> Identifier "=" Variable .            (rule 31)

	"}"            reduce using rule 31
	","            reduce using rule 31


State 67

	RecordEntries -> RecordEntries "," RecordEntry .    (rule 33)

	"}"            reduce using rule 33
	","            reduce using rule 33


State 68

	CallSiteAnnot -> "@@acontextual" "(" . ident ")"    (rule 24)

	ident          shift, and enter state 79


State 69

	CallSiteAnnots -> CallSiteAnnot CallSiteAnnots .    (rule 22)

	")"            reduce using rule 22
	";"            reduce using rule 22
	%eof           reduce using rule 22


State 70

	RecPat -> Identifier . "=" Pattern                  (rule 32)

	"="            shift, and enter state 78


State 71

	RecPats -> RecPat .                                 (rule 38)

	"}"            reduce using rule 38
	","            reduce using rule 38


State 72

	RecPats -> RecPats . "," RecPat                     (rule 36)
	RecPats -> RecPats . ","                            (rule 37)
	RecordPattern -> "{" RecPats . "}"                  (rule 50)

	"}"            shift, and enter state 76
	","            shift, and enter state 77


State 73

	RecordPattern -> "{" "}" .                          (rule 49)

	"}"            reduce using rule 49
	","            reduce using rule 49
	"?"            reduce using rule 49


State 74

	ClauseBody -> Variable "~" Pattern "?" . FunctionValue ":" FunctionValue    (rule 11)

	"fun"          shift, and enter state 19

	FunctionValue  goto state 75

State 75

	ClauseBody -> Variable "~" Pattern "?" FunctionValue . ":" FunctionValue    (rule 11)

	":"            shift, and enter state 85


State 76

	RecordPattern -> "{" RecPats "}" .                  (rule 50)

	"}"            reduce using rule 50
	","            reduce using rule 50
	"?"            reduce using rule 50


State 77

	RecPats -> RecPats "," . RecPat                     (rule 36)
	RecPats -> RecPats "," .                            (rule 37)

	"}"            reduce using rule 37
	","            reduce using rule 37
	ident          shift, and enter state 6

	Identifier     goto state 70
	RecPat         goto state 84

State 78

	RecPat -> Identifier "=" . Pattern                  (rule 32)

	"{"            shift, and enter state 51
	"fun"          shift, and enter state 52
	"int"          shift, and enter state 53
	"true"         shift, and enter state 54
	"false"        shift, and enter state 55
	"any"          shift, and enter state 56
	"_"            shift, and enter state 57

	Pattern        goto state 83
	RecordPattern  goto state 49
	BoolPattern    goto state 50

State 79

	CallSiteAnnot -> "@@acontextual" "(" ident . ")"    (rule 24)

	")"            shift, and enter state 82


State 80

	FunctionValue -> "fun" Variable "->" "(" Expr . ")"    (rule 39)

	")"            shift, and enter state 81


State 81

	FunctionValue -> "fun" Variable "->" "(" Expr ")" .    (rule 39)

	")"            reduce using rule 39
	";"            reduce using rule 39
	":"            reduce using rule 39
	%eof           reduce using rule 39


State 82

	CallSiteAnnot -> "@@acontextual" "(" ident ")" .    (rule 24)

	")"            reduce using rule 24
	";"            reduce using rule 24
	"@@acontextual"reduce using rule 24
	%eof           reduce using rule 24


State 83

	RecPat -> Identifier "=" Pattern .                  (rule 32)

	"}"            reduce using rule 32
	","            reduce using rule 32


State 84

	RecPats -> RecPats "," RecPat .                     (rule 36)

	"}"            reduce using rule 36
	","            reduce using rule 36


State 85

	ClauseBody -> Variable "~" Pattern "?" FunctionValue ":" . FunctionValue    (rule 11)

	"fun"          shift, and enter state 19

	FunctionValue  goto state 86

State 86

	ClauseBody -> Variable "~" Pattern "?" FunctionValue ":" FunctionValue .    (rule 11)

	")"            reduce using rule 11
	";"            reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 53
Number of terminals: 30
Number of non-terminals: 21
Number of states: 87
